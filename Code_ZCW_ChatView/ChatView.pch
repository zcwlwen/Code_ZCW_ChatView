//
//  ChatView.pch
//  Code_ZCW_ChatView
//
//  Created by 张朝伟 on 2016/10/12.
//  Copyright © 2016年 张朝伟. All rights reserved.
//

#ifndef ChatView_pch
#define ChatView_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#endif /* ChatView_pch */

//打印调试
#if DEBUG
#define ZCWLog(fmt,...)    NSLog((@"%s [Line %d] " fmt),__PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)  /**<输出语句*/
#else
#define ZCWLog(fmt, ...)
#endif
//颜色相关

#define ZCWColorWithAlpha(R,G,B,A) [UIColor colorWithRed:R/255.0 green:G/255.0 blue:B/255.0 alpha:A]
#define ZCWColor(R,G,B) [UIColor colorWithRed:R/255.0 green:G/255.0 blue:B/255.0 alpha:1.0]

//随机颜色
#define ZCWRandomColor ZCWColor(arc4random_uniform(255), arc4random_uniform(255), arc4random_uniform(255))
//高度宽带等
#define kWindowH [UIScreen mainScreen].bounds.size.height
#define kWindowW [UIScreen mainScreen].bounds.size.width

#define kStatusH [[UIApplication sharedApplication] statusBarFrame].size.height//状态栏高度
#define kNavH  self.navigationController.navigationBar.frame.size.height//导航栏高度

//这个项目用到的颜色
#define kYellow [UIColor colorWithRed:255/255.0 green:179/255.0 blue:36/255.0 alpha:1]


//#define WS(ws)  __weak typeof (ws) weakSelf = ws;
#define WS(weakSelf)  __weak __typeof(&*self)weakSelf = self;


//API

#define kAPILogin @"http://120.27.47.125/coolchat/login"
#define kAPIFriend @"http://120.27.47.125/coolchat/friends"

//创建单例

#define singleH(name) +(instancetype)share##name;

#if __has_feature(objc_arc)

#define singleM(name) static id _instance;\
+(instancetype)allocWithZone:(struct _NSZone *)zone\
{\
static dispatch_once_t onceToken;\
dispatch_once(&onceToken, ^{\
_instance = [super allocWithZone:zone];\
});\
return _instance;\
}\
\
+(instancetype)share##name\
{\
return [[self alloc]init];\
}\
-(id)copyWithZone:(NSZone *)zone\
{\
return _instance;\
}\
\
-(id)mutableCopyWithZone:(NSZone *)zone\
{\
return _instance;\
}
#else
#define singleM static id _instance;\
+(instancetype)allocWithZone:(struct _NSZone *)zone\
{\
static dispatch_once_t onceToken;\
dispatch_once(&onceToken, ^{\
_instance = [super allocWithZone:zone];\
});\
return _instance;\
}\
\
+(instancetype)shareTools\
{\
return [[self alloc]init];\
}\
-(id)copyWithZone:(NSZone *)zone\
{\
return _instance;\
}\
-(id)mutableCopyWithZone:(NSZone *)zone\
{\
return _instance;\
}\
-(oneway void)release\
{\
}\
\
-(instancetype)retain\
{\
return _instance;\
}\
\
-(NSUInteger)retainCount\
{\
return MAXFLOAT;\
}
#endif

